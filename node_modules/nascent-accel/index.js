/**
 * Copyright 2015, Nascent Objects
 * All rights reserved.
 */

 /**
  * Provides an API for the accelerometer on the Nascent main module
  * @module NascentAccelerometer 
  * @fires NascentAccelerometer#shake
  * @fires NascentAccelerometer#data
  */

var nascent;
var accel;
try {
    require('i2c-bus');
    nascent = require('./lib/accelerometer');
    accel = new nascent.Accel();
} catch(e) {
    console.log('Not running on device; assuming nops for accel');
}
var EventEmitter = require('events').EventEmitter;

var NascentAccelerometer = new EventEmitter(); 

if (accel) {
    accel.on('ready', function(state) {
        accel.setMode(10, 4, 12, function() {
            accel.setActivity(4, 10, 1, function() {
                NascentAccelerometer.emit('ready');
                accel.on('wake', function() {
                    /**
                     * @event shake                     
                     * @alias module:NascentAccelerometer#shake
                     */
                    NascentAccelerometer.emit('shake');
                });

                accel.on('sample', function(xyz) {
                    /**
                     * x, y, z 
                     * @event data
                     * @type {array}
                     * @alias module:NascentAccelerometer#data
                     */
                    NascentAccelerometer.emit('data', xyz);
                });
            });
        });
    });
}

NascentAccelerometer.enableKeyPressShake = function(keyName) {
    if (!keyName) {
        keyName = 'space';
    }

    var keypress = require('keypress');
    keypress(process.stdin);

    process.stdin.on('keypress', function(ch, key) {
        if (key && key.ctrl && key.name == 'c') {
            process.exit();
        } 

        if (key && key.name == keyName) {
            NascentAccelerometer.emit('shake');
        }
    });
    process.stdin.setRawMode(true);
    process.stdin.resume();
};

module.exports = NascentAccelerometer;
