'use strict';
var exec = require('child_process').exec;
var fs = require('fs');
var util = require('util');
var EventEmitter = require('events').EventEmitter;
var logger = require('./logger');
var LOG_TAG = 'system';

var sn = 'unknown';

function System(callback) {
    var self = this;

    self.SerialNumber(function(err, serialno) {
    	if (err) {
    		logger.info(LOG_TAG, {event: 'Error', error: err});
    	} else {
        	sn = serialno.trim();    		
    	}

    	logger.info(LOG_TAG, {event: 'Running', serialno: sn});

    	if (callback) {
            callback(null, self); 
        }
    });
}

util.inherits(System, EventEmitter);

System.prototype.PowerOff = function(cb) {
	logger.info(LOG_TAG, {event: 'Shutdown', serialno: sn});
	var child = exec("shutdown now", function(err, stdout, stderr) {
		if (err) {
    		logger.info(LOG_TAG, {event: 'Error', error: err});
		}
		if (cb) return cb(err);
	});
}

System.prototype.Sleep = function(cb) {
	logger.info(LOG_TAG, {event: 'Sleep', serialno: sn});
	fs.writeFile('/sys/power/state', 'mem', 'utf8', cb);
}

System.prototype.SerialNumber = function(cb) {
	fs.readFile('/factory/serial_number', 'utf8', cb);
}

System.prototype.DisableDefaultWebserver = function(cb) {
	logger.info(LOG_TAG, {event: 'Disable default web server'});
	var child = exec("systemctl stop edison_config.service", function(err, stdout, stderr) {
		if (err) {
    		logger.info(LOG_TAG, {event: 'Error', error: err});
		}
		if (cb) return cb(err);
	});
}

System.prototype.EnableDefaultWebserver = function(cb) {
	logger.info(LOG_TAG, {event: 'Enable default web server'});
	var child = exec("systemctl start edison_config.service", function(err, stdout, stderr) {
		if (err) {
    		logger.info(LOG_TAG, {event: 'Error', error: err});
		}
		if (cb) return cb(err);
	});
}

System.prototype.hostname = function(cb) {
	var child = exec("hostname", function(err, stdout, stderr) {
		if (err) {
    		logger.info(LOG_TAG, {event: 'Error', error: err});
		}
		if (cb) return cb(err, stdout.trim());
	});
}

module.exports = new System();
